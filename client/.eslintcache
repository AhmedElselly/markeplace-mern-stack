[{"D:\\webapps\\mern\\marketplace\\client\\src\\index.js":"1","D:\\webapps\\mern\\marketplace\\client\\src\\App.js":"2","D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\Menu.js":"3","D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\Home.js":"4","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\Login.js":"5","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\Register.js":"6","D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\Menu2.js":"7","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\apiUser.js":"8","D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\PrivateRoute.js":"9","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\Profile.js":"10","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\EditProfile.js":"11","D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\UserShops.js":"12","D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\ShopForm.js":"13","D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\apiShop.js":"14","D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\ShowShop.js":"15","D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\EditShop.js":"16","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\ProductForm.js":"17","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\apiProduct.js":"18","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\ShowProduct.js":"19","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Products.js":"20","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Card.js":"21","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\EditProduct.js":"22","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Product.js":"23","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Suggestions.js":"24","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Search.js":"25","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\AddToCart.js":"26","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\cartHelper.js":"27","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Cart.js":"28","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\CartItems.js":"29","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\StripeConnect.js":"30","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Checkout.js":"31","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\PlaceOrder.js":"32","D:\\webapps\\mern\\marketplace\\client\\src\\components\\orders\\ShopOrders.js":"33","D:\\webapps\\mern\\marketplace\\client\\src\\components\\orders\\apiOrder.js":"34","D:\\webapps\\mern\\marketplace\\client\\src\\components\\orders\\ProductOrderEdit.js":"35","D:\\webapps\\mern\\marketplace\\client\\src\\components\\placingOrder\\CartItems.js":"36","D:\\webapps\\mern\\marketplace\\client\\src\\components\\placingOrder\\Checkout.js":"37","D:\\webapps\\mern\\marketplace\\client\\src\\components\\placingOrder\\PlaceOrder.js":"38","D:\\webapps\\mern\\marketplace\\client\\src\\components\\placingOrder\\apiPlaceOrder.js":"39","D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\LandingPage.js":"40","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\AuctionForm.js":"41","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\apiAuction.js":"42","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\AuctionList.js":"43","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\AuctionShow.js":"44","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\Timer.js":"45","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\Bidding.js":"46","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\TabPanel.js":"47"},{"size":277,"mtime":1608801530608,"results":"48","hashOfConfig":"49"},{"size":3004,"mtime":1611138591537,"results":"50","hashOfConfig":"49"},{"size":2991,"mtime":1611336008099,"results":"51","hashOfConfig":"49"},{"size":1517,"mtime":1610704690947,"results":"52","hashOfConfig":"49"},{"size":1629,"mtime":1608828002058,"results":"53","hashOfConfig":"49"},{"size":2580,"mtime":1608809412788,"results":"54","hashOfConfig":"49"},{"size":933,"mtime":1608803225435,"results":"55","hashOfConfig":"49"},{"size":1737,"mtime":1610527840806,"results":"56","hashOfConfig":"49"},{"size":445,"mtime":1608806492733,"results":"57","hashOfConfig":"49"},{"size":4613,"mtime":1611400435110,"results":"58","hashOfConfig":"49"},{"size":3121,"mtime":1609926845139,"results":"59","hashOfConfig":"49"},{"size":2100,"mtime":1610966435544,"results":"60","hashOfConfig":"49"},{"size":2319,"mtime":1608911658549,"results":"61","hashOfConfig":"49"},{"size":1140,"mtime":1609156493108,"results":"62","hashOfConfig":"49"},{"size":2564,"mtime":1609672072346,"results":"63","hashOfConfig":"49"},{"size":3208,"mtime":1609149267109,"results":"64","hashOfConfig":"49"},{"size":3937,"mtime":1608984019113,"results":"65","hashOfConfig":"49"},{"size":2424,"mtime":1610470436999,"results":"66","hashOfConfig":"49"},{"size":1613,"mtime":1609159754583,"results":"67","hashOfConfig":"49"},{"size":1286,"mtime":1609257246074,"results":"68","hashOfConfig":"49"},{"size":2108,"mtime":1609159737698,"results":"69","hashOfConfig":"49"},{"size":4339,"mtime":1609158675501,"results":"70","hashOfConfig":"49"},{"size":2422,"mtime":1609257027141,"results":"71","hashOfConfig":"49"},{"size":1073,"mtime":1609257355504,"results":"72","hashOfConfig":"49"},{"size":3709,"mtime":1610704803413,"results":"73","hashOfConfig":"49"},{"size":663,"mtime":1609258496666,"results":"74","hashOfConfig":"49"},{"size":1463,"mtime":1609502299021,"results":"75","hashOfConfig":"49"},{"size":331,"mtime":1610617116189,"results":"76","hashOfConfig":"49"},{"size":3053,"mtime":1609432026189,"results":"77","hashOfConfig":"49"},{"size":712,"mtime":1609925030076,"results":"78","hashOfConfig":"49"},{"size":2364,"mtime":1609516650008,"results":"79","hashOfConfig":"49"},{"size":1883,"mtime":1610616499308,"results":"80","hashOfConfig":"49"},{"size":2829,"mtime":1610037049524,"results":"81","hashOfConfig":"49"},{"size":1120,"mtime":1610619933999,"results":"82","hashOfConfig":"49"},{"size":2514,"mtime":1610619912087,"results":"83","hashOfConfig":"49"},{"size":3258,"mtime":1610617194670,"results":"84","hashOfConfig":"49"},{"size":2374,"mtime":1610617225292,"results":"85","hashOfConfig":"49"},{"size":2361,"mtime":1610621512562,"results":"86","hashOfConfig":"49"},{"size":342,"mtime":1610619280547,"results":"87","hashOfConfig":"49"},{"size":368,"mtime":1610706957433,"results":"88","hashOfConfig":"49"},{"size":4907,"mtime":1611244493844,"results":"89","hashOfConfig":"49"},{"size":641,"mtime":1611335661754,"results":"90","hashOfConfig":"49"},{"size":2123,"mtime":1610967570143,"results":"91","hashOfConfig":"49"},{"size":4356,"mtime":1611334912325,"results":"92","hashOfConfig":"49"},{"size":2008,"mtime":1611311450515,"results":"93","hashOfConfig":"49"},{"size":3385,"mtime":1611335717674,"results":"94","hashOfConfig":"49"},{"size":595,"mtime":1611400334393,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"at7wiy",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"180","messages":"181","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"98"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"98"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"98"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"98"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"98"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"98"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\webapps\\mern\\marketplace\\client\\src\\index.js",[],["221","222"],"D:\\webapps\\mern\\marketplace\\client\\src\\App.js",["223"],"import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Menu from  './components/Main/Menu';\nimport Home from  './components/Main/Home';\nimport LandingPage from  './components/Main/LandingPage';\n\nimport PrivateRoute from  './components/Main/PrivateRoute';\n\nimport Login from './components/users/Login';\nimport Register from './components/users/Register';\nimport Profile from './components/users/Profile';\nimport EditProfile from './components/users/EditProfile';\nimport StripeConnect from './components/users/StripeConnect';\n\nimport UserShops from  './components/shops/UserShops';\nimport ShopForm from  './components/shops/ShopForm';\nimport ShowShop from  './components/shops/ShowShop';\nimport EditShop from  './components/shops/EditShop';\n\nimport ProductForm from './components/products/ProductForm';\nimport EditProduct from './components/products/EditProduct';\nimport ShowProduct from './components/products/ShowProduct';\nimport Product from './components/products/Product';\nimport Cart from './components/products/Cart';\n\nimport ShopOrders from './components/orders/ShopOrders';\n\nimport AuctionList from './components/auctions/AuctionList';\nimport AuctionForm from './components/auctions/AuctionForm';\nimport AuctionShow from './components/auctions/AuctionShow';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu/>\n      <Switch>\n        <Route exact path='/' component={LandingPage} />\n        <Route exact path='/home' component={Home} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/register' component={Register} />\n        <Route exact path='/cart' component={Cart} />\n        {/*Users Routes*/}\n        <PrivateRoute exact path='/profile/:userId' component={Profile} />\n        <PrivateRoute exact path='/profile/:userId/edit' component={EditProfile} />\n        <PrivateRoute exact path='/seller/stripe/connect' component={StripeConnect} />\n        {/*Shops Routes*/}\n        <PrivateRoute exact path='/shops/:userId' component={UserShops} />\n        <PrivateRoute exact path='/shop/new' component={ShopForm} />\n        <PrivateRoute exact path='/shops/show/:shopId' component={ShowShop} />\n        <PrivateRoute exact path='/shop/edit/:shopId' component={EditShop} />\n        {/*Products Routes*/}\n        <PrivateRoute exact path='/product/:shopId/create/:userId' component={ProductForm} />\n        <PrivateRoute exact path='/product/:shopId/edit/:productId' component={EditProduct} />\n        <PrivateRoute exact path='/product/:shopId/show/:productId' component={Product} />\n        {/*Orders Routes*/}\n        <PrivateRoute exact path='/orders/:shopId' component={ShopOrders} />\n\n        {/*Auction Routes*/}\n        <PrivateRoute exact path='/auctions' component={AuctionList} />\n        <PrivateRoute exact path='/auctions/new/:userId' component={AuctionForm} />\n        <PrivateRoute exact path='/auctions/show/:auctionId' component={AuctionShow} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\Menu.js",["224"],"import React, {Component, Fragment} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {itemTotal} from '../products/cartHelper';\r\n\r\nimport './Menu.css';\r\n\r\nconst Menu = () => {\r\n\treturn(\r\n\t\t<nav className=\"navbar navbar-expand-lg purple-navbar navbar-dark bg-dark\">\r\n\t\t  <Link className=\"navbar-brand\" to=\"/\">Market Place</Link>\r\n\t\t  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t    <span className=\"navbar-toggler-icon\"></span>\r\n\t\t  </button>\r\n\r\n\t\t  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t    <ul className=\"navbar-nav mr-auto\">\r\n\t\t      <li className=\"nav-item active\">\r\n\t\t        <Link className=\"nav-link\" to=\"/home\">Home <span className=\"sr-only\">(current)</span></Link>\r\n\t\t      </li>\r\n\t\t      {isAuthenticated() && (\r\n\t\t      \t<div>\r\n\t\t\t      \t<li className=\"nav-item\">\r\n\t\t\t        \t<Link className=\"nav-link\" to={`/profile/${isAuthenticated().user._id}`}>{isAuthenticated().user.fullName}</Link>\r\n\t\t\t      \t</li>\t\t\r\n\t\t      \t</div>\r\n\t\t      \t)}\r\n\t\t      {isAuthenticated() && isAuthenticated().user.seller && (\r\n\t\t      \t<Fragment>\r\n\t\t\t      \t<li className=\"nav-item\">\r\n\t\t\t        \t<Link className=\"nav-link\" to={`/shops/${isAuthenticated().user._id}`}>Your Shops</Link>\r\n\t\t\t      \t</li>\r\n\t\t\t      \t<li className=\"nav-item\">\r\n\t\t\t        \t<Link className=\"nav-link\" to={`/auctions`}>Auctions</Link>\r\n\t\t\t      \t</li>\r\n\t\t      \t</Fragment>\r\n      \t\t)}\r\n\t\t      {\r\n\t\t      \t!isAuthenticated() && (\r\n\t\t      \t\t<Fragment>\r\n\t\t      \t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t        <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n\t\t\t\t\t      </li>\r\n\t\t\t\t\t      <li className=\"nav-item\">\r\n\t\t\t\t\t        <Link className=\"nav-link\" to=\"/register\">Register</Link>\r\n\t\t\t\t\t      </li>\t\t\t\r\n\t\t      \t\t</Fragment>\r\n\t      \t\t)\r\n\t\t      }\r\n\t\t      <li className=\"nav-item\">\r\n\t\t        <Link className=\"nav-link\" to=\"/cart\">Cart {itemTotal()}</Link>\r\n\t\t      </li>\r\n\t\t      <li className=\"nav-item dropdown\">\r\n\t\t        <Link className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\t\t          Dropdown\r\n\t\t        </Link>\r\n\t\t        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n\t\t          <Link className=\"dropdown-item\" to=\"#\">Action</Link>\r\n\t\t          <Link className=\"dropdown-item\" to=\"#\">Another action</Link>\r\n\t\t          <div className=\"dropdown-divider\"></div>\r\n\t\t          <Link className=\"dropdown-item\" to=\"#\">Something else here</Link>\r\n\t\t        </div>\r\n\t\t      </li>\r\n\t\t      <li className=\"nav-item\">\r\n\t\t        <Link className=\"nav-link disabled\" to=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</Link>\r\n\t\t      </li>\r\n\t\t    </ul>\r\n\t\t    \r\n\t\t  </div>\r\n\t\t</nav>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default withRouter(Menu);","D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\Home.js",["225"],"import React, {Component} from 'react';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {shopIndex} from '../shops/apiShop';\r\nimport {getCategories} from '../products/apiProduct';\r\nimport {Link} from 'react-router-dom';\r\nimport {Divider, Avatar, ListItem, ListItemAvatar, Typography} from '@material-ui/core';\r\nimport Search from '../products/Search';\r\n\r\nclass Home extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshops: [],\r\n\t\t\tcategories: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tshopIndex().then(res => {\r\n\t\t\tthis.setState({shops: res.data});\r\n\t\t});\r\n\t\tgetCategories().then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({categories: res.data});\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst shops = this.state.shops.map((shop, i) => {\r\n\t\t\treturn <Link to={`/shops/show/${shop._id}`} key={shop._id}>\r\n\t\t\t\t\t\t<Divider/>\r\n\t\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t<Avatar src={`http://localhost:8000/shops/${shop._id}/image`}/>\r\n\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t<div className={''}>\r\n\t\t\t\t\t\t\t\t<Typography type=\"headline\"\r\n\t\t\t\t\t\t\t\tcomponent=\"h2\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t{shop.name}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography type=\"subheading\" component=\"h4\">\r\n\t\t\t\t\t\t\t\t{shop.description}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t<Divider/>\r\n\t\t\t\t\t</Link>\r\n\t\t})\r\n\t\treturn(\r\n\t\t\t<div className='container mt-4'>\r\n\t\t\t\t<Search categories={this.state.categories} />\r\n\t\t\t\t<h1>All Shops</h1>\r\n\t\t\t\t{shops}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\Login.js",["226","227"],"import React, {Component} from 'react';\r\nimport {login, authenticate} from './apiUser';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Login extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tloaded: false\r\n\t\t}\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tthis.setState({[e.target.name]: e.target.value});\r\n\t}\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tconst {email, password} = this.state;\r\n\t\tlogin(email, password).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({loaded: true});\r\n\t\t\tauthenticate(res.data, () => {\r\n\t\t\t\tconsole.log('User Logged In');\r\n\t\t\t});\r\n\t\t\tthis.props.history.push('/');\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {email, password, loaded} = this.state;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t \t<h1>Login</h1>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n\t\t\t\t    <input type=\"email\" name='email' value={email} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n\t\t\t\t    <input type=\"password\" name='password' value={password} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Login;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\Register.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\Menu2.js",["228","229"],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\apiUser.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\PrivateRoute.js",["230"],"import React, {Component} from 'react';\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {isAuthenticated} from '../users/apiUser';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n\treturn (\r\n\t\t<Route {...rest} render={props => (\r\n\t\t\tisAuthenticated() ? (\r\n\t\t\t\t<Component {...props} />\r\n\t\t\t):(\r\n\t\t\t<Redirect to={{pathname: '/login', state: {from: props.location}}} />\r\n\t\t\t)\r\n\t\t)} />\r\n\t)\r\n}\r\n\r\nexport default PrivateRoute;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\Profile.js",["231","232","233","234"],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\EditProfile.js",["235"],"import React, {Component} from 'react';\r\nimport {isAuthenticated, getUser, editProfile, updateUser} from './apiUser';\r\nimport {FormControlLabel, Switch, Typography} from '@material-ui/core';\r\nclass EditProfile extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfirstName: '',\r\n\t\t\tlastName: '',\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tseller: false,\r\n\t\t\tid: ''\r\n\t\t}\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSellerChange = this.handleSellerChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tgetUser(_id).then(res => {\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tthis.setState({seller: res.data.user.seller, firstName: res.data.user.firstName, lastName: res.data.user.lastName, email: res.data.user.email, id: res.data.user._id});\r\n\t\t});\r\n\t}\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tconst {id, email, firstName, lastName, password, seller} = this.state;\r\n\t\teditProfile(id, firstName, lastName, email, password, seller).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tupdateUser(res.data, () => {\r\n\t\t\t\tconsole.log('userupdate')\r\n\t\t\t})\r\n\t\t\tthis.props.history.push(`/profile/${id}`);\r\n\t\t})\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tthis.setState({[e.target.name]: e.target.value});\r\n\t}\r\n\r\n\thandleSellerChange(e, checked){\r\n\t\tthis.setState({seller: !this.state.seller});\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {id, email, firstName, lastName, password, seller} = this.state;\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1>Edit Profile</h1>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n\t\t\t\t    <input type=\"email\" name='email' value={email} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">First Name</label>\r\n\t\t\t\t    <input type=\"text\" name='firstName' value={firstName} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Last Name</label>\r\n\t\t\t\t    <input type=\"text\" name='lastName' value={lastName} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n\t\t\t\t    <input type=\"password\" name='password' value={password} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <Typography variant=\"subtitle1\" className={''}>\r\n\t\t\t\t\t\tSeller Account\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\tcontrol={<Switch\r\n\t\t\t\t\t\t\tchecked={seller}\r\n\t\t\t\t\t\t\tonChange={this.handleSellerChange}\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\tlabel={seller ? 'Active' : 'Inactive'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default EditProfile;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\UserShops.js",["236"],"import React, {Component} from 'react';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {shopByUser} from './apiShop';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n\tDivider,\r\n \tAvatar,\r\n  ListItem,\r\n\tListItemAvatar,\r\n  Typography,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Button\r\n  } from '@material-ui/core';\r\nclass UserShops extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshops: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tshopByUser(_id, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({shops: res.data});\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\t\tconst shops = this.state.shops.map((shop, i) => {\r\n\t\t\treturn <Link to={`/shops/show/${shop._id}`} key={i}>\r\n\t\t\t\t\t\t\t<Divider/>\r\n\t\t\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t\t\t<Avatar src={`http://localhost:8000/shops/${shop._id}/image`}/>\r\n\t\t\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t\t\t<div className={''}>\r\n\t\t\t\t\t\t\t\t\t<Typography type=\"headline\"\r\n\t\t\t\t\t\t\t\t\tcomponent=\"h2\" color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t{shop.name}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography type=\"subheading\" component=\"h4\">\r\n\t\t\t\t\t\t\t\t\t{shop.description}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t{isAuthenticated() && isAuthenticated().user._id === shop.owner._id && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Link className='mr-3' to={`/shop/edit/${shop._id}`}>\r\n\t\t\t\t\t\t\t\t<Button variant='contained' color=\"primary\">\r\n\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">Delete</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Divider/>\r\n\t\t\t\t\t\t</Link>\r\n\t\t})\r\n\t\treturn(\r\n\t\t\t<div className='container mt-5'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-8'>\r\n\t\t\t\t\t\t<h1>User Shops</h1>\r\n\t\t\t\t\t\t{shops}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-4'>\r\n\t\t\t\t\t\t<Link className='btn btn-primary' to='/shop/new'>Create New Shop</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UserShops;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\ShopForm.js",["237","238"],"import React, {Component} from 'react';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {createShop} from './apiShop';\r\nimport {Button} from '@material-ui/core';\r\n\r\nclass ShopForm extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\timage: null,\r\n\t\t\tloaded: false\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tconst value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n\t\tthis.setState({[e.target.name]: value});\r\n\t}\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst formData = new FormData();\r\n\t\tconst {name, image, description} = this.state;\r\n\t\tformData.append('name', name);\r\n\t\tformData.append('description', description);\r\n\t\tformData.append('image', image);\r\n\t\tcreateShop(_id, formData, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({loaded: true});\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {name, loaded, image, description} = this.state;\r\n\t\tif(loaded) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1>Create a shop</h1>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Shop's Name</label>\r\n\t\t\t\t    <input type=\"text\" name='name' value={name} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"icon-button-file\">Shop's Logo</label>\r\n\t\t\t\t\t\t<input type=\"file\" accept='image/*' id='icon-button-file' name='image' onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t\t\t<span>{image ? image.name : ''}</span>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Description</label>\r\n\t\t\t\t    <input type=\"text\" name='description' value={description} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ShopForm;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\apiShop.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\ShowShop.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\shops\\EditShop.js",["239","240"],"import React, {Component} from 'react';\r\nimport {getShop, updateShop} from './apiShop';\r\nimport {getShopProducts} from '../products/apiProduct';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport Products from '../products/Products';\r\n\r\nimport './Shop.css';\r\n\r\nclass EditShop extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\towner: '',\r\n\t\t\tproducts: [],\r\n\t\t\timage: null,\r\n\t\t\tloaded: false\r\n\t\t}\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {shopId} = this.props.match.params;\r\n\t\tgetShop(shopId).then(res => {\r\n\t\t\tthis.setState({name: res.data.name, description: res.data.description, owner: res.data.owner});\r\n\t\t});\r\n\t\tgetShopProducts(shopId).then(res => {\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tthis.setState({products: res.data});\r\n\t\t})\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tconst value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n\t\tthis.setState({[e.target.name]: value});\r\n\t}\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tconst {shopId} = this.props.match.params;\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst formData = new FormData();\r\n\t\tconst {name, image, description} = this.state;\r\n\t\tformData.append('name', name);\r\n\t\tformData.append('description', description);\r\n\t\tformData.append('image', image);\r\n\t\tupdateShop(_id, formData, shopId, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({loaded: true});\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {name, loaded, image, description, owner, products} = this.state;\r\n\r\n\t\tif(this.state.loaded){\r\n\t\t\tthis.props.history.push(`/shops/${_id}`);\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1>Edit {name} shop</h1>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t<div style={{padding: 50}} className='col-md-4 box'>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Shop's Name</label>\r\n\t\t\t\t    <input type=\"text\" name='name' value={name} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"icon-button-file\">Shop's Logo</label>\r\n\t\t\t\t\t\t<input type=\"file\" accept='image/*' id='icon-button-file' name='image' onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t\t\t<span>{image ? image.name : ''}</span>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Description</label>\r\n\t\t\t\t    <input type=\"text\" name='description' value={description} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className='mb-2'>\r\n\t\t\t\t  \tOwner: {owner.fullName}\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-8 box'>\r\n\t\t\t\t\t<h3>Products</h3> \r\n\t\t\t\t\t<Products products={products} />\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default EditShop;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\ProductForm.js",["241","242","243","244"],"import React, {Component} from 'react';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {create} from './apiProduct';\r\n\r\n\r\nclass ProductForm extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\tprice: '',\r\n\t\t\tcategory: '',\r\n\t\t\timage: '',\r\n\t\t\tquantity: '',\r\n\t\t\tshop: '',\r\n\t\t\tdescription: '',\r\n\t\t\tloaded: false\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {shopId} = this.props.match.params;\r\n\t\t\r\n\t\tthis.setState({shop: shopId})\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tconst value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n\t\tthis.setState({[e.target.name]: value});\r\n\t}\r\n\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tconst {shopId, userId} = this.props.match.params;\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {name, loaded, price, image, category, quantity, description, shop} = this.state;\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append('name', name);\r\n\t\tformData.append('price', price);\r\n\t\tformData.append('image', image);\r\n\t\tformData.append('category', category);\r\n\t\tformData.append('quantity', quantity);\r\n\t\tformData.append('description', description);\r\n\t\tformData.append('shop', shop);\r\n\t\tconsole.log(shop)\r\n\t\tcreate(userId, formData, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tname: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t\tprice: '',\r\n\t\t\t\tcategory: '',\r\n\t\t\t\tquantity: ''\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {name, loaded, price, image, category, quantity, description} = this.state;\r\n\t\tconst {shopId, userId} = this.props.match.params;\r\n\r\n\t\tif(loaded){\r\n\t\t\tthis.props.history.push(`/shops/show/${shopId}`);\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1>Create a shop</h1>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Name</label>\r\n\t\t\t\t    <input type=\"text\" name='name' value={name} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"icon-button-file\">Image</label>\r\n\t\t\t\t\t\t<input type=\"file\" accept='image/*' id='icon-button-file' name='image' onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t\t\t<span>{image ? image.name : ''}</span>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Price</label>\r\n\t\t\t\t    <input type=\"number\" name='price' value={price} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Category</label>\r\n\t\t\t\t    <input type=\"text\" name='category' value={category} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Quantity</label>\r\n\t\t\t\t    <input type=\"number\" name='quantity' value={quantity} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <input type=\"hidden\" name='shop' value={shopId} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Description</label>\r\n\t\t\t\t    <input type=\"text\" name='description' value={description} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n\t\t\t\t</form>\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ProductForm;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\apiProduct.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\ShowProduct.js",["245","246","247","248","249","250","251","252","253","254","255"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {getSingleProduct, relatedList} from './apiProduct';\r\nimport Card from './Card';\r\nimport Products from './Products';\r\nimport '../shops/Shop.css';\r\n\r\nclass ShowProduct extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\tquantity: '',\r\n\t\t\tprice: '',\r\n\t\t\tcategory: '',\r\n\t\t\treList: [],\r\n\t\t\tshop: {}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {productId, shopId} = this.props.match.params;\r\n\t\tconsole.log(shopId)\r\n\t\tconst {name, description, quantity, price, category} = this.state;\r\n\t\tgetSingleProduct(productId).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({\r\n\t\t\t\tname: res.data.name,\r\n\t\t\t\tdescription: res.data.description,\r\n\t\t\t\tquantity: res.data.quantity,\r\n\t\t\t\tprice: res.data.price,\r\n\t\t\t\tcategory: res.data.category,\r\n\t\t\t\tshop: res.data.shop\r\n\t\t\t});\r\n\t\t});\r\n\t\trelatedList(productId).then(res => {\r\n\t\t\tconsole.log('related list', res.data)\r\n\t\t\tthis.setState({reList: res.data});\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {productId, shopId} = this.props.match.params;\r\n\t\tconst {name, description, quantity, price, reList, category, shop} = this.state;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-sm-4 box'>\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\tproductId={productId} \r\n\t\t\t\t\t\tshopId={shopId}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-md-8 box'>\r\n\t\t\t\t\t\t<h1>Related Products</h1>\r\n\t\t\t\t\t\t<Products shopId={shop._id} products={reList} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ShowProduct;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Products.js",["256","257","258","259","260"],"import React, {Component} from 'react';\r\nimport {GridList, GridListTile, GridListTileBar, Button} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport AddToCart from './AddToCart';\r\n\r\nclass Products extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t}\r\n\trender(){\r\n\t\tconst {products, shopId} = this.props;\r\n\t\tconst allProducts = products.map(product => {\r\n\t\t\treturn(\r\n\t\t\t\t<div key={product._id} className=\"card mb-3\" style={{maxWidth: '540'}}>\r\n\t\t\t\t  <div className=\"row no-gutters\">\r\n\t\t\t\t    <div className=\"col-md-4\">\r\n\t\t\t\t      <img height='100%' style={{objectFit: 'cover'}} src={`http://localhost:8000/products/${product._id}/image`} className=\"card-img\" alt=\"...\"/>\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"col-md-8\">\r\n\t\t\t\t      <div className=\"card-body\">\r\n\t\t\t\t        <Link to={`/product/${shopId}/show/${product._id}`}><h5 className=\"card-title\">{product.name}</h5></Link>\r\n\t\t\t\t        <p className=\"card-text\">{product.description}</p>\r\n\t\t\t\t    \t<AddToCart item={product} /> \r\n\r\n\t\t\t\t        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{allProducts}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Products;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Card.js",["261","262","263","264","265","266"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {getOwner} from '../shops/apiShop';\r\nimport {getSingleProduct, relatedList} from './apiProduct';\r\n\r\nclass Card extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\townerId: '',\r\n\t\t\tname: '',\r\n\t\t\tdescription: '',\r\n\t\t\tquantity: '',\r\n\t\t\tprice: '',\r\n\t\t\tcategory: '',\r\n\t\t\treList: [],\r\n\t\t\tshop: {}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {productId, shopId} = this.props;\r\n\t\t// const {shopId} = this.props.match.params;\r\n\t\tconsole.log(shopId)\r\n\t\tconst {name, description, quantity, price, category} = this.state;\r\n\t\tgetSingleProduct(productId).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({\r\n\t\t\t\tname: res.data.name,\r\n\t\t\t\tdescription: res.data.description,\r\n\t\t\t\tquantity: res.data.quantity,\r\n\t\t\t\tprice: res.data.price,\r\n\t\t\t\tcategory: res.data.category,\r\n\t\t\t\tshop: res.data.shop\r\n\t\t\t});\r\n\t\t});\r\n\t\tconsole.log(shopId)\r\n\t\tgetOwner(_id, shopId).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({ownerId: res.data.owner._id})\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\t\tconst {name, description, quantity, ownerId, price, category, shop} = this.state;\r\n\t\t// const {ownerId} = this.state;\r\n\t\tconsole.log(this.state)\r\n\t\tconst {productId} = this.props;\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"card\" style={{'width': '18rem'}}>\r\n\t\t\t\t  <img src={`http://localhost:8000/products/${productId}/image`} className=\"card-img-top\" alt={name}/>\r\n\t\t\t\t  <div className=\"card-body\">\r\n\t\t\t\t    <h5 className=\"card-title\">{name}</h5>\r\n\t\t\t\t    <p className=\"card-text\">{description}</p>\r\n\t\t\t\t    <p className=\"card-text\">Price: {price}</p>\r\n\t\t\t\t    <p className=\"card-text\">Quantity: {quantity}</p>\r\n\t\t\t\t    <p className=\"card-text\">Category: {category}</p>\r\n\t\t\t\t    {isAuthenticated() && isAuthenticated().user._id === ownerId && (\r\n\t\t\t\t\t    <Link to={`/product/${shop._id}/edit/${productId}`} className=\"btn btn-primary\">Edit</Link>\r\n\r\n\t\t\t\t    \t)}\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Card;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\EditProduct.js",["267","268","269"],"import React, {Component} from 'react';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {updateProduct, getSingleProduct} from './apiProduct';\r\n\r\n\r\nclass ProductForm extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\tprice: '',\r\n\t\t\tcategory: '',\r\n\t\t\timage: '',\r\n\t\t\tquantity: '',\r\n\t\t\tshop: '',\r\n\t\t\tdescription: '',\r\n\t\t\tloaded: false\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tconst {productId, shopId} = this.props.match.params;\r\n\t\tgetSingleProduct(productId).then(res=> {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({\r\n\t\t\t\tname: res.data.name,\r\n\t\t\t\tprice: res.data.price,\r\n\t\t\t\tcategory: res.data.category,\r\n\t\t\t\tquantity: res.data.quantity,\r\n\t\t\t\tdescription: res.data.description\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.setState({shop: shopId})\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tconst value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n\t\tthis.setState({[e.target.name]: value});\r\n\t}\r\n\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tconst {shopId, productId} = this.props.match.params;\r\n\t\tconsole.log(productId)\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {name, loaded, price, image, category, quantity, description, shop} = this.state;\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append('name', name);\r\n\t\tformData.append('price', price);\r\n\t\tformData.append('image', image);\r\n\t\tformData.append('category', category);\r\n\t\tformData.append('quantity', quantity);\r\n\t\tformData.append('description', description);\r\n\t\tformData.append('shop', shop);\r\n\t\tconsole.log(shop)\r\n\t\tupdateProduct(_id, formData, productId, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({\r\n\t\t\t\tloaded: true,\r\n\t\t\t\tname: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t\tprice: '',\r\n\t\t\t\tcategory: '',\r\n\t\t\t\tquantity: ''\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {name, loaded, price, image, category, quantity, description} = this.state;\r\n\t\tconst {shopId, productId} = this.props.match.params;\r\n\r\n\t\tif(loaded){\r\n\t\t\tthis.props.history.push(`/product/${shopId}/show/${productId}`);\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1>Create a shop</h1>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Name</label>\r\n\t\t\t\t    <input type=\"text\" name='name' value={name} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"icon-button-file\">Image</label>\r\n\t\t\t\t\t\t<input type=\"file\" accept='image/*' id='icon-button-file' name='image' onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t\t\t<span>{image ? image.name : ''}</span>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Price</label>\r\n\t\t\t\t    <input type=\"number\" name='price' value={price} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Category</label>\r\n\t\t\t\t    <input type=\"text\" name='category' value={category} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Quantity</label>\r\n\t\t\t\t    <input type=\"number\" name='quantity' value={quantity} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <input type=\"hidden\" name='shop' value={shopId} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Description</label>\r\n\t\t\t\t    <input type=\"text\" name='description' value={description} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n\t\t\t\t</form>\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ProductForm;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Product.js",["270","271","272","273","274","275","276","277"],"import React, {useState, useEffect} from 'react';\r\nimport {getSingleProduct, relatedList} from './apiProduct';\r\nimport Suggestions from './Suggestions';\r\nimport {Card, CardHeader, CardMedia, Typography, Icon} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport AddToCart from './AddToCart';\r\n\r\nconst Product = ({match}) => {\r\n\tconst [product, setProduct] = useState({shop: {}});\r\n\tconst [suggestions, setSuggestions] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst abortController = new AbortController();\r\n\t\tconst signal = abortController.signal;\r\n\t\tconsole.log(match.params.productId)\r\n\t\tconst {productId} = match.params;\r\n\t\tgetSingleProduct(productId).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tsetProduct(res.data);\r\n\t\t})\r\n\t}, [match.params.productId]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst {productId} = match.params;\r\n\t\trelatedList(productId).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tsetSuggestions(res.data);\r\n\t\t})\r\n\t}, [match.params.productId])\r\n\r\n\treturn(\r\n\t\t<div className='container mt-5'>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-md-4'>\r\n\t\t\t\t\t<div className=\"card mb-3\" style={{maxWidth: '540px'}}>\r\n\t\t\t\t\t  <div className=\"row no-gutters\">\r\n\t\t\t\t\t    <div className=\"col-md-4\">\r\n\t\t\t\t\t      <img height='100%' style={{objectFit: 'cover'}} src={`http://localhost:8000/products/${product._id}/image`} className=\"card-img\" alt=\"...\"/>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t    <div className=\"col-md-8\">\r\n\t\t\t\t\t      <div className=\"card-body\">\r\n\t\t\t\t\t        <h5 className=\"card-title\">{product.name}</h5>\r\n\t\t\t\t\t        <p className=\"card-text\">{product.description}</p>\r\n\t\t\t\t\t        <p className=\"card-text\">${product.price}</p>\r\n\t\t\t\t\t        <p className=\"card-text\">{product.category}</p>\r\n\t\t\t\t\t        {/*isAuthenticated() && isAuthenticated().user._id === ownerId && (\r\n\t\t\t\t\t\t    \t\t<Link to={`/product/${shop._id}/edit/${productId}`} className=\"btn btn-primary\">Edit</Link>\r\n\r\n\t\t\t\t\t    \t)*/}\r\n\t\t\t\t\t    \t<AddToCart item={product} /> \r\n\t\t\t\t\t    \t<Link to={`/product/${product.shop._id}/edit/${product._id}`} className=\"btn btn-primary\">Edit</Link>\r\n\t\t\t\t\t        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-8'>\r\n\t\t\t\t\t<Suggestions products={suggestions} title='Related Products'/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Product;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Suggestions.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Search.js",["278","279","280"],"import React, {Component} from 'react';\r\nimport {TextField, MenuItem, Button} from '@material-ui/core';\r\nimport {postSearch} from './apiProduct';\r\nimport {Link} from 'react-router-dom';\r\nimport AddToCart from './AddToCart';\r\n\r\nclass Search extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcategory: 'All',\r\n\t\t\tsearch: '',\r\n\t\t\tresult: [],\r\n\t\t\tsearched: false\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.search = this.search.bind(this);\r\n\t\tthis.searchProducts = this.searchProducts.bind(this);\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tthis.setState({[e.target.name]: e.target.value});\r\n\t}\r\n\r\n\tsearch(e){\r\n\t\te.preventDefault();\r\n\t\tconst {category, search} = this.state;\r\n\t\tconsole.log(category)\r\n\t\tpostSearch(search, category).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({result: res.data, searched: true});\r\n\t\t})\r\n\t}\r\n\r\n\tsearchProducts(val = []) {\r\n    return(\r\n        <div>\r\n          <div className='row'>\r\n            {val.map((product, i) => (\r\n                <div key={product._id} className=\"card mb-3\" style={{maxWidth: '540px'}}>\r\n\t\t\t\t\t\t\t  <div className=\"row no-gutters\">\r\n\t\t\t\t\t\t\t    <div className=\"col-md-4\">\r\n\t\t\t\t\t\t\t      <img height='100%' style={{objectFit: 'cover'}} src={`http://localhost:8000/products/${product._id}/image`} className=\"card-img\" alt=\"...\"/>\r\n\t\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t    <div className=\"col-md-8\">\r\n\t\t\t\t\t\t\t      <div className=\"card-body\">\r\n\t\t\t\t\t\t\t        <Link to={`/product/${product.shop._id}/show/${product._id}`}><h5 className=\"card-title\">{product.name}</h5></Link>\r\n\t\t\t\t\t\t\t        <p className=\"card-text\">{product.description}</p>\r\n\t\t\t\t\t\t\t        <p className=\"card-text\">${product.price}</p>\r\n\t\t\t\t\t\t\t        <p className=\"card-text\">{product.category}</p>\r\n\t\t\t\t\t\t    \t<AddToCart item={product} /> \r\n\r\n\t\t\t\t\t\t\t    \t<Link to={`/product/${product.shop._id}/edit/${product._id}`} className=\"btn btn-primary\">Edit</Link>\r\n\t\t\t\t\t\t\t        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t\t\t\t\t\t\t      </div>\r\n\t\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t</div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\n\trender(){\r\n\t\tconst {category, search, result, searched} = this.state;\r\n\t\tconsole.log('category', category)\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t{/*<TextField id=\"select-category\" select label=\"Select category\"\r\n\t\t\t\t\t\t\t\tvalue={category}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tselectProps={{ MenuProps: { className: ''} }}>\r\n\t\t\t\t\t\t\t\t<MenuItem value=\"All\"> All </MenuItem>\r\n\t\t\t\t\t\t\t\t\t{categories.map(option => (\r\n\t\t\t\t\t\t\t\t\t<MenuItem key={option} value={option}> {option} </MenuItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t\t\t<TextField id=\"search\" label=\"Search products\" type=\"search\"\r\n\t\t\t\t\t\t\t\tonKeyDown={enterKey}\r\n\t\t\t\t\t\t\t\tonChange={handleChange('search')}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button raised onClick={search}> Search </Button>*/}\r\n\t\t\t\t<form onSubmit={this.search}>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"search\">Search</label>\r\n\t\t\t\t    <select name=\"category\" onChange={this.handleChange} id=\"\">\r\n\t\t\t\t\t    <option value=\"All\">All</option>\r\n\t\t\t\t\t    {this.props.categories.map((category, i) => {\r\n\t\t\t\t\t    \treturn(\r\n\t\t\t\t\t    \t\t<option key={i} value={category}>{category}</option>\r\n\t\t\t\t\t    \t)\r\n\t\t\t\t\t    })}\r\n\t\t\t\t    </select>\r\n\t\t\t\t    <input type=\"text\" className=\"form-control\"\r\n\t\t\t\t    value={search} name='search' onChange={this.handleChange} htmlFor=\"search\" placeholder=\"Search\"/>\r\n\t\t\t\t    <button className='btn btn-primary'>Search</button>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  {searched && result.length && (\r\n\t\t\t\t  \t<div>\r\n\t\t\t\t  \t\t{this.searchProducts(result)}\r\n\t\t\t\t  \t</div>\r\n\t\t\t  \t)}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Search;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\AddToCart.js",["281"],"import React, {Component} from 'react';\r\nimport {addItem} from './cartHelper';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass AddToCart extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tredirect: false\r\n\t\t}\r\n\t\tthis.addToCart = this.addToCart.bind(this);\r\n\t}\r\n\r\n\taddToCart(){\r\n\t\taddItem(this.props.item, () => {\r\n\t\t\tthis.setState({redirect: true});\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {item} = this.props;\r\n\t\tif(this.state.redirect){\r\n\t\t\treturn <Redirect to='/cart' />\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={this.addToCart} className='btn btn-success'>AddToCart</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddToCart;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\cartHelper.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Cart.js",["282","283"],"import React, {Component} from 'react';\r\nimport {getCart} from './cartHelper';\r\nimport {Link} from 'react-router-dom';\r\nimport CartItems from '../placingOrder/CartItems';\r\n\r\nclass Cart extends Component{\r\n\trender(){\r\n\r\n\t\treturn(\r\n\t\t\t<div className='container'>\t\t\r\n\t\t\t\t<CartItems/>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Cart;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\CartItems.js",["284","285"],"import React, {useState} from 'react';\r\nimport {getCart, updateCart, removeCartItem} from './cartHelper';\r\nimport {Link} from 'react-router-dom';\r\nimport {TextField} from '@material-ui/core';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {StripeProvider} from 'react-stripe-elements';\r\nimport Checkout from './Checkout';\r\n\r\nconst CartItems = props => {\r\n\t\r\n\tconst [cartItems, setCartItems] = useState(getCart());\r\n\tconst [checkout, setCheckout] = useState(true);\r\n\r\n\tconst handleChange = i => e => {\r\n\t\tlet updatedCartItems = cartItems;\r\n\t\tif(e.target.value == 0){\r\n\t\t\tupdatedCartItems[i].quantity = 1;\r\n\t\t} else {\r\n\t\t\tupdatedCartItems[i].quantity = e.target.value;\r\n\t\t}\r\n\t\tsetCartItems([...updatedCartItems]);\r\n\t\tupdateCart(i, e.target.value);\r\n\t}\r\n\r\n\tconst removeItem = i => e => {\r\n\t\tlet updatedCartItems = removeCartItem(i);\r\n\t\tif(updatedCartItems.length == 0){\r\n\r\n\t\t\tsetCheckout(false);\r\n\t\t}\r\n\t\tsetCartItems(updatedCartItems);\r\n\t}\r\n\r\n\tconst getTotal = () => {\r\n\t\treturn cartItems.reduce((a, b) => {\r\n\t\t\treturn a + (b.quantity * b.product.price);\r\n\t\t}, 0);\r\n\t}\r\n\r\n\tconst renderCartItems = cartItems.map((item, i) => {\r\n\t\treturn (\r\n\t\t\t<div key={item.product._id} className=\"card mb-3\" style={{maxWidth: '540'}}>\r\n\t\t\t  <div className=\"row no-gutters\">\r\n\t\t\t    <div className=\"col-md-4\">\r\n\t\t\t      <img height='100%' style={{objectFit: 'cover'}} src={`http://localhost:8000/products/${item.product._id}/image`} className=\"card-img\" alt=\"...\"/>\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"col-md-8\">\r\n\t\t\t      <div className=\"card-body\">\r\n\t\t\t        <Link to={`/product/${item.shop}/show/${item.product._id}`}><h5 className=\"card-title\">{item.product.name}</h5></Link>\r\n\t\t\t        <p className=\"card-text\">{item.product.description}</p>\r\n\t\t\t        Quantity: <TextField\r\n\t\t\t\t\t\t\t\tvalue={item.quantity}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(i)}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tinputProps={{ min:1 }}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button onClick={removeItem(i)} className='btn btn-warning'>Remove</button>\r\n\t\t\t        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t\t\t      </div>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n\r\n\tconst openCheckout = () => {\r\n\t\tsetCheckout(true);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className='row'>\r\n\t\t<div className='col-md-8'> \r\n\t\t\t{getCart().length ? (renderCartItems):(\r\n\t\t\t\t<div>No items in your cart</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t<div className='col-md-4'>\r\n\t\t\t<span className='mr-5'>{`Total: ${getTotal()}`}</span>\r\n\t\t\t{isAuthenticated() ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t{checkout ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button className='btn btn-success' onClick={openCheckout}>Checkout</button>\r\n\t\t\t\t\t\t<StripeProvider apiKey='pk_test_TYooMQauvdEDq54NiTphI7jx'>\r\n\t\t\t\t\t\t\t<Checkout/>\r\n\t\t\t\t\t\t</StripeProvider>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t):(\r\n\t\t\t\t\t<div>You should fill your cart</div>\r\n\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t):(\r\n\t\t\t\t<div>\r\n\t\t\t\tyou should login first\r\n\t\t\t\t<Link to='/login'>Login</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default CartItems;",["286","287"],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\StripeConnect.js",["288"],"import React, {useEffect, useState} from 'react';\r\nimport queryString from 'query-string';\r\nimport {isAuthenticated, stripeUpdate} from './apiUser';\r\n\r\nconst StripeConnect = (props) => {\r\n\tconst [values, setValues] = useState({});\r\n\tconst [connected, setConnected] = useState(false);\r\n\tuseEffect(() => {\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst parsed = queryString.parse(props.location.search);\r\n\t\tconsole.log(parsed);\r\n\t\tstripeUpdate(_id, token, parsed.code).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tsetValues({...values});\r\n\t\t\tsetConnected(true);\r\n\t\t})\r\n\t})\r\n\tconsole.log(values)\r\n\treturn (\r\n\t\t<div>StripeConnect</div>\r\n\t)\r\n}\r\n\r\nexport default StripeConnect;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\Checkout.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\products\\PlaceOrder.js",["289","290","291","292","293","294","295","296"],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\orders\\ShopOrders.js",["297","298","299","300","301"],"import React, {useEffect, useState} from 'react';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {listByShop} from './apiOrder';\r\nimport {Typography, List, ListItem, ListItemText, Collapse, ExpandLess, ExpandMore} from '@material-ui/core';\r\nimport ProductOrderEdit from './ProductOrderEdit';\r\n\r\nconst ShopOrders = ({match}) => {\r\n\tconst [orders, setOrders] = useState([]);\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {shopId} = match.params;\r\n\t\tconsole.log('ShopId', shopId);\r\n\r\n\t\tlistByShop(shopId, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tsetOrders(res.data)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst handleClick = e => {\r\n\r\n\t}\r\n\r\n\tconst updateOrders = (index, updatedOrder) => {\r\n\t\tlet updatedOrders = orders;\r\n\t\tupdatedOrders[index] = updatedOrder;\r\n\t\tsetOrders([...updatedOrders]);\r\n\t}\r\n\r\n\tconsole.log('orders', orders)\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Typography type=\"title\">Shop's orders</Typography>\r\n\t\t\t<List dense> {orders.map((order, index) => { \r\n\t\t\t\tconsole.log(order._id)\r\n\t\t\t\treturn(\r\n\t\t\t\t<span key={index}>\r\n\t\t\t\t<ListItem button onClick={handleClick(index)}>\r\n\t\t\t\t<ListItemText primary={'Order # '+order._id}\r\n\t\t\t\t/>\r\n\t\t\t\t{/*open == index ? <ExpandLess /> : <ExpandMore />*/}\r\n\t\t\t\t{/*order.products.map(item => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"card mb-3\" style={{maxWidth: '540px'}}>\r\n\t\t\t\t\t\t  <div className=\"row no-gutters\">\r\n\t\t\t\t\t\t    <div className=\"col-md-4\">\r\n\t\t\t\t\t\t      <img src={`http://localhost:8000/products/${item.product._id}/image`} className=\"card-img\" alt=\"...\"/>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t    <div className=\"col-md-8\">\r\n\t\t\t\t\t\t      <div className=\"card-body\">\r\n\t\t\t\t\t\t        <h5 className=\"card-title\">{item.product.name}</h5>\r\n\t\t\t\t\t\t        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t\t\t\t\t\t      </div>\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})*/}\r\n\t\t\t\t</ListItem>\r\n\t\t\t\t<Collapse component=\"li\" in={open == index}\r\n\t\t\t\ttimeout=\"auto\" unmountOnExit>\r\n\t\t\t\t<ProductOrderEdit shopId={match.params.shopId}\r\n\t\t\t\torder={order} orderId={order._id} orderIndex={index} updateOrders={updateOrders}/>\r\n\t\t\t\t<Typography type=\"subheading\"> Deliver to:</Typography>\r\n\t\t\t\t<Typography type=\"subheading\" color=\"primary\">\r\n\t\t\t\t{order.customer_name} ({order.customer_email})\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography type=\"subheading\" color=\"primary\">\r\n\t\t\t\t{order.delivery_address.street}</Typography>\r\n\t\t\t\t<Typography type=\"subheading\" color=\"primary\">\r\n\t\t\t\t{order.delivery_address.city},\r\n\t\t\t\t{order.delivery_address.state}\r\n\t\t\t\t{order.delivery_address.zipcode}</Typography>\r\n\t\t\t\t<Typography type=\"subheading\" color=\"primary\">\r\n\t\t\t\t{order.delivery_address.country}</Typography>\r\n\t\t\t\t</Collapse>\r\n\t\t\t</span>\r\n\t\t\t)})}\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ShopOrders;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\orders\\apiOrder.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\orders\\ProductOrderEdit.js",["302"],"import React, {useState, useEffect} from 'react';\r\nimport {getStatusValues, updateOrderStatus, createCharge} from './apiOrder';\r\nimport {isAuthenticated} from '../users/apiUser';\r\n\r\nconst ProductOrderEdit = (props) => {\r\n\tconst [values, setValues] = useState([]);\r\n\tconst {token} = isAuthenticated();\r\n\tconst {_id} = isAuthenticated().user;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst {orderId} = props;\r\n\t\tgetStatusValues(orderId, token).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tsetValues(res.data);\r\n\t\t})\r\n\t}, []);\r\n\r\n\tconst handleStatusChange = productIndex => e => {\r\n\t\tconsole.log(e.target.value)\r\n\t\tlet order = props.order;\r\n\t\torder.products[productIndex].status = e.target.value;\r\n\t\tlet product = order.products[productIndex]\r\n\t\tconsole.log('product', product);\r\n\t\t// if(e.target.value === 'Cancelled'){\r\n\r\n\t\t// } else if(e.target.value === 'Processing'){\r\n\r\n\t\t// } else {\r\n\t\t\tconst {orderId, shopId} = props;\r\n\r\n\t\t\tif(e.target.value === 'Processing'){\r\n\t\t\t\tupdateOrderStatus(e.target.value, orderId, shopId, product._id, token).then(res => {\r\n\t\t\t\tconsole.log('updated status is: ', res.data);\r\n\t\t\t\tprops.updateOrders(props.orderIndex, order);\r\n\t\t\t\t})\r\n\t\t\t\tconst amount = product.quantity * product.product.price;\r\n\t\t\t\tcreateCharge(orderId, token, _id, shopId, product._id, e.target.value, amount).then(res => {\r\n\t\t\t\t\tconsole.log('createCharge, ', res.data);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t// }\r\n\t\t\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.order.products.map((item, i) => {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<div class=\"card mb-3\" style={{maxWidth: '540px'}}>\r\n\t\t\t\t\t  <div class=\"row no-gutters\">\r\n\t\t\t\t\t    <div class=\"col-md-4\">\r\n\t\t\t\t\t      <img height='100%' style={{objectFit: 'cover'}} src={`http://localhost:8000/products/${item.product._id}/image`} class=\"card-img\" alt=\"...\"/>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t    <div class=\"col-md-8\">\r\n\t\t\t\t\t      <div class=\"card-body\">\r\n\t\t\t\t\t        <h5 class=\"card-title\">{item.product.name}</h5>\r\n\t\t\t\t\t        <div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t    \r\n\t\t\t\t\t\t\t\t    <select onChange={handleStatusChange(i)} class=\"form-control\" id=\"exampleFormControlSelect1\">\r\n\t\t\t\t\t\t\t\t    \t{values.map(value => {\r\n\t\t\t\t\t\t\t\t    \t\treturn (\r\n\t\t\t\t\t\t\t\t    \t\t\t<option value={value}>{value}</option>\r\n\t\t\t\t\t\t\t    \t\t\t)\r\n\t\t\t\t\t\t\t\t    \t})\r\n\t\t\t\t\t\t\t\t    \t}\r\n\t\t\t\t\t\t\t\t      \r\n\t\t\t\t\t\t\t\t    </select>\r\n\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t        <p class=\"card-text\"><small class=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t\t\t\t\t      </div>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProductOrderEdit;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\placingOrder\\CartItems.js",["303","304","305","306","307"],"import React, {useState} from 'react';\r\nimport {getCart, updateCart, removeCartItem} from '../products/cartHelper';\r\nimport {Link} from 'react-router-dom';\r\nimport {TextField} from '@material-ui/core';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useStripe,\r\n  useElements,\r\n} from '@stripe/react-stripe-js';\r\nimport Checkout from './Checkout';\r\n\r\nconst stripePromise = loadStripe('pk_test_fanZLznQoHp09rw1HXuS0vZA0019urp2MB', {\r\n\tstripeAccount: 'acct_1I95McJu3zmoQ4cN'\r\n});\r\n\r\nconst CartItems = props => {\r\n\t\r\n\tconst [cartItems, setCartItems] = useState(getCart());\r\n\tconst [checkout, setCheckout] = useState(true);\r\n\r\n\tconst handleChange = i => e => {\r\n\t\tlet updatedCartItems = cartItems;\r\n\t\tif(e.target.value == 0){\r\n\t\t\tupdatedCartItems[i].quantity = 1;\r\n\t\t} else {\r\n\t\t\tupdatedCartItems[i].quantity = e.target.value;\r\n\t\t}\r\n\t\tsetCartItems([...updatedCartItems]);\r\n\t\tupdateCart(i, e.target.value);\r\n\t}\r\n\r\n\tconst removeItem = i => e => {\r\n\t\tlet updatedCartItems = removeCartItem(i);\r\n\t\tif(updatedCartItems.length == 0){\r\n\r\n\t\t\tsetCheckout(false);\r\n\t\t}\r\n\t\tsetCartItems(updatedCartItems);\r\n\t}\r\n\r\n\tconst getTotal = () => {\r\n\t\treturn cartItems.reduce((a, b) => {\r\n\t\t\treturn a + (b.quantity * b.product.price);\r\n\t\t}, 0);\r\n\t}\r\n\r\n\tconst renderCartItems = cartItems.map((item, i) => {\r\n\t\treturn (\r\n\t\t\t<div key={item.product._id} className=\"card mb-3\" style={{maxWidth: '540'}}>\r\n\t\t\t  <div className=\"row no-gutters\">\r\n\t\t\t    <div className=\"col-md-4\">\r\n\t\t\t      <img height='100%' style={{objectFit: 'cover'}} src={`http://localhost:8000/products/${item.product._id}/image`} className=\"card-img\" alt=\"...\"/>\r\n\t\t\t    </div>\r\n\t\t\t    <div className=\"col-md-8\">\r\n\t\t\t      <div className=\"card-body\">\r\n\t\t\t        <Link to={`/product/${item.shop}/show/${item.product._id}`}><h5 className=\"card-title\">{item.product.name}</h5></Link>\r\n\t\t\t        <p className=\"card-text\">{item.product.description}</p>\r\n\t\t\t        Quantity: <TextField\r\n\t\t\t\t\t\t\t\tvalue={item.quantity}\r\n\t\t\t\t\t\t\t\tonChange={handleChange(i)}\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tinputProps={{ min:1 }}\r\n\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button onClick={removeItem(i)} className='btn btn-warning'>Remove</button>\r\n\t\t\t        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n\t\t\t      </div>\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t})\r\n\r\n\tconst openCheckout = () => {\r\n\t\tsetCheckout(true);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className='row'>\r\n\t\t<div className='col-md-8'> \r\n\t\t\t{getCart().length ? (renderCartItems):(\r\n\t\t\t\t<div>No items in your cart</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t<div className='col-md-4'>\r\n\t\t\t<span className='mr-5'>{`Total: ${getTotal()}`}</span>\r\n\t\t\t{isAuthenticated() ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t{checkout ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button className='btn btn-success' onClick={openCheckout}>Checkout</button>\r\n\t\t\t\t\t\t<Elements stripe={stripePromise}>\r\n\t\t\t\t\t\t\t<Checkout/>\r\n\t\t\t\t\t\t</Elements>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t):(\r\n\t\t\t\t\t<div>You should fill your cart</div>\r\n\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t):(\r\n\t\t\t\t<div>\r\n\t\t\t\tyou should login first\r\n\t\t\t\t<Link to='/login'>Login</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default CartItems;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\placingOrder\\Checkout.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\placingOrder\\PlaceOrder.js",["308","309","310","311"],"import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from '@material-ui/core';\r\n// import {injectStripe, CardElement} from 'react-stripe-elements';\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useStripe,\r\n  useElements,\r\n} from '@stripe/react-stripe-js';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {emptyCart} from '../products/cartHelper';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {createOrder} from './apiPlaceOrder';\r\n\r\nconst PlaceOrder = (props) => {\r\n\tconst [values, setValues] = useState({\r\n\t\tid: '',\r\n\t\torderId: '',\r\n\t\terror: '',\r\n\t\tredirect: false\r\n\t})\r\n\r\n\r\n\tconst stripe = useStripe();\r\n  \tconst elements = useElements();\r\n\r\n\tconst [card, setCard] = useState({});\r\n\tconsole.log(props.checkoutDetails)\r\n\tconst placeOrder = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {error, paymentMethod} = await stripe.createPaymentMethod({\r\n\t      type: 'card',\r\n\t      card: elements.getElement(CardElement),\r\n\t    });\r\n\r\n\t\tcreateOrder(_id, token, paymentMethod.id, props.checkoutDetails).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\temptyCart(() => {\r\n\t\t\t\tsetValues({...values, 'orderId': res.data._id, redirect: true})\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t    \r\n\r\n\t\t// props.stripe.createToken().then(payload => {\r\n\t\t// \tconst {token} = isAuthenticated();\r\n\t\t// \tconst {_id} = isAuthenticated().user;\r\n\t\t// \tconsole.log(payload)\r\n\t\t// \tcreateOrder(_id, token, props.checkoutDetails, payload.token.card, payload.token.id).then(res => {\r\n\t\t// \t\tconsole.log(res.data)\r\n\t\t// \t\temptyCart(() => {\r\n\t\t// \t\t\tsetValues({...values, 'orderId': res.data._id, redirect: true})\r\n\t\t// \t\t})\r\n\t\t// \t})\r\n\t\t// \tconst {orderId} = values;\r\n\t\t// \t// const {shopId} = props.params;\r\n\r\n\t\t// \tconsole.log('orderId, ', orderId);\r\n\t\t\t\r\n\t\t// })\r\n\t}\r\n\r\n\tif(values.redirect){\r\n\t\treturn <Redirect to='/'/>\r\n\t}\r\n\t\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<CardElement {...{style: {\r\n\t\t\t\tbase: {\r\n\t\t\t\t\tcolor: '#424770',\r\n\t\t\t\t\tletterSpacing: '0.025em',\r\n\t\t\t\t\t'::placeholder': {\r\n\t\t\t\t\t\tcolor: '#aab7c4'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tinvalid: {\r\n\t\t\t\tcolor: '#9e2146',\r\n\t\t\t\t},\r\n\t\t\t}}} />\r\n\t\t\t<Button color=\"primary\" variant=\"raised\" onClick={placeOrder}>Place Order</Button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPlaceOrder.propTypes = {\r\n\tcheckoutDetails: PropTypes.object.isRequired\r\n}\r\n\r\nexport default PlaceOrder;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\placingOrder\\apiPlaceOrder.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\Main\\LandingPage.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\AuctionForm.js",["312","313"],"import React, {Component} from 'react';\r\nimport {postAuction} from './apiAuction';\r\nimport {isAuthenticated} from '../users/apiUser';\r\n\r\nclass AuctionForm extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\titemName: '',\r\n\t\t\timage: '',\r\n\t\t\tdescription: '',\r\n\t\t\tbidStart: '',\r\n\t\t\tbidEnd: '',\r\n\t\t\tstartingBid: '',\r\n\t\t\terror: ''\r\n\t\t}\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.getDateString = this.getDateString.bind(this);\r\n\t\tthis.handleBiddingTimeChange = this.handleBiddingTimeChange.bind(this);\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tconst value = e.target.name === 'image' ? e.target.files[0] : e.target.value;\r\n\t\t// const formData = new FormData();\r\n\t\t// const currentDate = new Date();\r\n\t\t// const bidStart = this.getDateString(currentDate);\r\n\t\t// const bidEnd = this.getDateString(new Date(currentDate.setHours(currentDate.getHours() + 1)));;\r\n\r\n\t\tthis.setState({[e.target.name]: value});\r\n\t}\r\n\r\n\tgetDateString(date){\r\n\t\tlet year = date.getFullYear();\r\n\t\tlet day = date.getDate().toString().length === 1 ? '0' + date.getDate() : date.getDate();\r\n\t\tlet month = date.getMonth().toString().length === 1 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\r\n\t\tlet hours = date.getHours().toString().length === 1 ? '0' + date.getHours() : date.getHours();\r\n\t\tlet minutes = date.getMinutes().toString().length === 1 ? '0' + date.getMinutes() : date.getMinutes();\r\n\t\tlet dateString = `${year}-${month}-${day}T${hours}:${minutes}`;\r\n\t\treturn dateString;\r\n\t}\r\n\r\n\thandleBiddingTimeChange(e){\r\n\t\tif(e.target.name === 'bidStart' || e.target.name === 'bidEnd'){\r\n\t\t\tthis.setState({[e.target.name]: e.target.value});\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tconst {userId} = this.props.match.params;\r\n\t\tconst {token} = isAuthenticated();\r\n\t\tconst {itemName, image, description, startingBid, error, bidEnd} = this.state;\r\n\t\tconst formData = new FormData();\r\n\t\tconst currentDate = new Date();\r\n\t\tconst bidStart = this.getDateString(currentDate);\r\n\t\t// const bidEnd = this.getDateString(new Date(currentDate.setHours(currentDate.getHours() + 1)));;\r\n\t\t// if(this.state.bidEnd < this.state.bidStart){\r\n\t\t// \tthis.setState({error: 'Auction can not end before it starts!'});\r\n\t\t// }\r\n\t\tconsole.log(bidStart, bidEnd)\r\n\t\tformData.append('itemName', itemName)\r\n\t\tformData.append('image', image)\r\n\t\tformData.append('description', description)\r\n\t\tformData.append('startingBid', startingBid)\r\n\t\tformData.append('bidStart', bidStart)\r\n\t\tformData.append('bidEnd', bidEnd)\r\n\t\tpostAuction(userId, token, formData).then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {itemName, image, description, startingBid, bidStart, bidEnd, error} = this.state;\r\n\t\t// const {userId} = this.props.match.params;\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<h1>New Auction</h1>\r\n\t\t\t\t{error && (\r\n\t\t\t\t\t<div class=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t  {error}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n  \t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Name</label>\r\n\t\t\t\t    <input type=\"text\" name='itemName' value={itemName} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"icon-button-file\">Image</label>\r\n\t\t\t\t\t\t<input type=\"file\" accept='image/*' id='icon-button-file' name='image' onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t\t\t<span>{image ? image.name : ''}</span>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputEmail1\">Starting Bid</label>\r\n\t\t\t\t    <input type=\"number\" name='startingBid' value={startingBid} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Description</label>\r\n\t\t\t\t    <input type=\"text\" name='description' value={description} onChange={this.handleChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Auction Start Time</label>\r\n\t\t\t\t    <input type=\"datetime-local\" name='bidStart' value={bidStart} onChange={this.handleBiddingTimeChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t    <label htmlFor=\"exampleInputPassword1\">Auction End Time</label>\r\n\t\t\t\t    <input type=\"datetime-local\" name='bidEnd' value={bidEnd} onChange={this.handleBiddingTimeChange} className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary\">Create</button>\t\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AuctionForm;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\apiAuction.js",[],"D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\AuctionList.js",["314"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {auctionList} from './apiAuction';\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport {\r\n\tDivider,\r\n \tAvatar,\r\n  ListItem,\r\n\tListItemAvatar,\r\n  Typography,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Button\r\n  } from '@material-ui/core';\r\n\r\nclass AuctionList extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tposts: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tauctionList().then(res => {\r\n\t\t\tconsole.log(res.data);\r\n\t\t\tthis.setState({posts: res.data});\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst allAuctions = this.state.posts.map(post => {\r\n\t\t\treturn(\r\n\t\t\t\t<Link to={`/auctions/show/${post._id}`} key={post._id}>\r\n\t\t\t\t\t<Divider/>\r\n\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t<ListItemAvatar>\r\n\t\t\t\t\t\t\t<Avatar src={`http://localhost:8000/auctions/${post._id}/image`}/>\r\n\t\t\t\t\t\t</ListItemAvatar>\r\n\t\t\t\t\t\t<div className={''}>\r\n\t\t\t\t\t\t\t<Typography type=\"headline\"\r\n\t\t\t\t\t\t\tcomponent=\"h2\" color=\"primary\">\r\n\t\t\t\t\t\t\t{post.itemName}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography type=\"subheading\" component=\"h4\">\r\n\t\t\t\t\t\t\t{post.description}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ListItemSecondaryAction>\r\n\t\t\t\t\t{isAuthenticated() && isAuthenticated().user._id === post.seller._id && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Link className='mr-3' to={`/auction/edit/${post._id}`}>\r\n\t\t\t\t\t\t<Button variant='contained' color=\"primary\">\r\n\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\">Delete</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t</ListItemSecondaryAction>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Divider/>\r\n\t\t\t\t</Link>\r\n\t\t\t)\r\n\t\t})\r\n\t\treturn(\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-8'>\r\n\t\t\t\t\t{allAuctions}\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-sm-4'>\r\n\t\t\t\t\t\t{isAuthenticated() && isAuthenticated().user.seller && (\r\n\t\t\t\t\t\t\t<Link style={{float: 'right'}} className='mb-5 btn btn-primary' to={`/auctions/new/${isAuthenticated().user._id}`}>Add New Auction</Link>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AuctionList;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\AuctionShow.js",["315","316","317"],"import React, {useState, useEffect, Fragment}  from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {getAuction} from './apiAuction'\r\nimport {Link} from 'react-router-dom'\r\nimport {isAuthenticated} from '../users/apiUser';\r\nimport Timer from './Timer'\r\nimport Bidding from './Bidding'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 60,\r\n  },\r\n  flex:{\r\n    display:'flex'\r\n  },\r\n  card: {\r\n    padding:'24px 40px 40px'\r\n  },\r\n  subheading: {\r\n    margin: '16px',\r\n    color: theme.palette.openTitle\r\n  },\r\n  description: {\r\n    margin: '16px',\r\n    fontSize: '0.9em',\r\n    color: '#4f4f4f'\r\n  },\r\n  price: {\r\n    padding: '16px',\r\n    margin: '16px 0px',\r\n    display: 'flex',\r\n    backgroundColor: '#93c5ae3d',\r\n    fontSize: '1.3em',\r\n    color: '#375a53',\r\n  },\r\n  media: {\r\n    height: 300,\r\n    display: 'inline-block',\r\n    width: '100%',\r\n  },\r\n  icon: {\r\n    verticalAlign: 'sub'\r\n  },\r\n  link:{\r\n    color: '#3e4c54b3',\r\n    fontSize: '0.9em'\r\n  },\r\n  itemInfo:{\r\n      width: '35%',\r\n      margin: '16px'\r\n  },\r\n  bidSection: {\r\n      margin: '20px',\r\n      minWidth: '50%'\r\n  },\r\n  lastBid: {\r\n    color: '#303030',\r\n    margin: '16px',\r\n  }\r\n}))\r\n\r\nexport default function AuctionShow ({match}) {\r\n  const classes = useStyles()\r\n  const [auction, setAuction] = useState({})\r\n  const [error, setError] = useState('')\r\n  const [justEnded, setJustEnded] = useState(false)\r\n\r\n    useEffect(() => {\r\n      // const abortController = new AbortController()\r\n      // const signal = abortController.signal\r\n  \t\tconst {auctionId} = match.params;\r\n  \t\tconst {token} = isAuthenticated();\r\n      getAuction(auctionId, token).then((res) => {\r\n        \r\n          setAuction(res.data)\r\n        \r\n      })\r\n    // return function cleanup(){\r\n    //   abortController.abort()\r\n    // }\r\n  }, [match.params.auctionId])\r\n  const updateBids = (updatedAuction) => {\r\n    setAuction(updatedAuction)\r\n  }\r\n  const update = () => {\r\n    setJustEnded(true)\r\n  }\r\n  \r\n\r\n  const currentDate = new Date()\r\n    return (\r\n\t    <div className={classes.root}>\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            title={auction.itemName}\r\n            subheader={<span>\r\n              {currentDate < new Date(auction.bidStart) && 'Auction Not Started'}\r\n              {currentDate > new Date(auction.bidStart) && currentDate < new Date(auction.bidEnd) && 'Auction Live'}\r\n              {currentDate > new Date(auction.bidEnd) && 'Auction Ended'}\r\n              </span>}\r\n          />\r\n          <Grid container spacing={6}>\r\n            <Grid item xs={5} sm={5}>\r\n              <CardMedia\r\n                  className={classes.media}\r\n                  image={`http://localhost:8000/auctions/${auction._id}/image`}\r\n                  title={auction.itemName}\r\n              />\r\n              <Typography component=\"p\" variant=\"subtitle1\" className={classes.subheading}>\r\n              About Item</Typography>\r\n              <Typography component=\"p\" className={classes.description}>\r\n              {auction.description}</Typography>\r\n            </Grid>\r\n            \r\n            <Grid item xs={7} sm={7}>\r\n              {currentDate > new Date(auction.bidStart) \r\n              ? (<Fragment>\r\n                  <Timer endTime={auction.bidEnd} update={update}/> \r\n                  { auction.bids.length > 0 &&  \r\n                      <Typography component=\"p\" variant=\"subtitle1\" className={classes.lastBid}>\r\n                          {` Last bid: $ ${auction.bids[0].bid}`}\r\n                      </Typography>\r\n                  }\r\n                  { !isAuthenticated() && <Typography>Please, <Link to='/login'>sign in</Link> to place your bid.</Typography> }\r\n                  { isAuthenticated() && <Bidding auction={auction} justEnded={justEnded} updateBids={updateBids}/> }\r\n                </Fragment>)\r\n              : <Typography component=\"p\" variant=\"h6\">{`Auction Starts at ${new Date(auction.bidStart).toLocaleString()}`}</Typography>}\r\n            </Grid>     \r\n          </Grid>          \r\n        </Card>\r\n\t    </div>)\r\n}","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\Timer.js",["318","319","320","321"],"import React, {useState, useEffect}  from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    endTime: {\r\n      fontSize: '0.75em',\r\n      color: '#323232',\r\n      fontWeight: 300\r\n    },\r\n    subheading: {\r\n      margin: '16px',\r\n      color: theme.palette.openTitle\r\n    },\r\n  }))\r\n\r\nconst calculateTimeLeft = (date) => {\r\n    const difference = date - new Date()\r\n    let timeLeft = {}\r\n  \r\n    if (difference > 0) {\r\n      timeLeft = {\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60),\r\n        timeEnd: false\r\n      }\r\n    } else {\r\n        timeLeft = {timeEnd: true}\r\n    }\r\n    return timeLeft\r\n}\r\nexport default function Timer (props) {\r\n  const classes = useStyles()\r\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft(new Date(props.endTime)))\r\n\r\n    useEffect(() => {\r\n      let timer = null\r\n      if(!timeLeft.timeEnd){\r\n        timer = setTimeout(() => {\r\n            setTimeLeft(calculateTimeLeft(new Date(props.endTime)))\r\n        }, 1000)\r\n      }else{\r\n          props.update()\r\n      }\r\n      return () => {\r\n        clearTimeout(timer)\r\n      }\r\n    })\r\n    return (<div className={classes.subheading}>\r\n        {!timeLeft.timeEnd? <Typography component=\"p\" variant=\"h6\" >\r\n                {timeLeft.days != 0 && `${timeLeft.days} d `} \r\n                {timeLeft.hours != 0 && `${timeLeft.hours} h `} \r\n                {timeLeft.minutes != 0 && `${timeLeft.minutes} m `} \r\n                {timeLeft.seconds != 0 && `${timeLeft.seconds} s`} left <span className={classes.endTime}>{`(ends at ${new Date(props.endTime).toLocaleString()})`}</span></Typography> : \r\n            <Typography component=\"p\" variant=\"h6\" >Auction ended</Typography>}\r\n        </div>\r\n    )\r\n}","D:\\webapps\\mern\\marketplace\\client\\src\\components\\auctions\\Bidding.js",["322"],"import React, {useState, useEffect, Fragment} from 'react';\r\nimport io from 'socket.io-client';\r\nimport {TextField, Button, Grid, Typography} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n// import {} from './apiAuction';\r\nimport {isAuthenticated} from '../users/apiUser';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    bidHistory: {\r\n        marginTop: '20px',\r\n        backgroundColor: '#f3f3f3',\r\n        padding: '16px'\r\n    },\r\n    placeForm: {\r\n        margin: '0px 16px 16px',\r\n        backgroundColor: '#e7ede4',\r\n        display: 'inline-block'\r\n    },\r\n    marginInput: {\r\n        margin: 16\r\n    },\r\n    marginBtn: {\r\n        margin: '8px 16px 16px'\r\n    }\r\n}))\r\n\r\nconst Bidding = (props) => {\r\n  const classes = useStyles()\r\n\r\n\tconst [bid, setBid] = useState('');\r\n\r\n\tuseEffect(()=> {\r\n\t\tsocket.emit('join auction room', {room: props.auction._id});\r\n\t\treturn () => {\r\n\t\t\tsocket.emit('leave auction room', {room: props.auction._id});\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('new bid', payload => {\r\n\t\t\tprops.updateBids(payload);\r\n\t\t})\r\n\t\treturn () => {\r\n\t\t\tsocket.off('new bid');\r\n\t\t}\r\n\t})\r\n\r\n\tconst handleChange = e => {\r\n\t\tsetBid(e.target.value);\r\n\t}\r\n\r\n\tconst placeBid = e => {\r\n\t\tconst {_id} = isAuthenticated().user;\r\n\t\tconst newBid = {\r\n\t\t\tbid,\r\n\t\t\ttime: new Date(),\r\n\t\t\tbidder: _id\r\n\t\t}\r\n\t\tsocket.emit('new bid', {\r\n\t\t\troom: props.auction._id,\r\n\t\t\tbidInfo: newBid\r\n\t\t})\r\n\t\tsetBid('');\r\n\t}\r\n\r\n\tconst minBid = props.auction.bids && props.auction.bids.length > 0 ? props.auction.bids[0].bid : props.auction.startingBid;\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{!props.justEnded && new Date() < new Date(props.auction.bidEnd) && (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tlabel='Your Bid ($)'\r\n\t\t\t\t\t\tvalue={bid}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\thelperText={`Enter ${Number(minBid) + 1} or more`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t variant='contained' \r\n\t\t\t\t\t color='secondry'\r\n\t\t\t\t\t disabled={bid < (minBid + 1)}\r\n\t\t\t\t\t onClick={placeBid}\r\n\t\t\t\t\t>Place Bid</Button>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className={classes.bidHistory}>\r\n          <Typography variant=\"h6\">All bids</Typography><br/>\r\n          <Grid container spacing={4}>\r\n              <Grid item xs={3} sm={3}>\r\n                  <Typography variant=\"subtitle1\" color=\"primary\">Bid Amount</Typography>\r\n              </Grid>\r\n              <Grid item xs={5} sm={5}>\r\n                  <Typography variant=\"subtitle1\" color=\"primary\">Bid Time</Typography>\r\n              </Grid>\r\n              <Grid item xs={4} sm={4}>\r\n                  <Typography variant=\"subtitle1\" color=\"primary\">Bidder</Typography>\r\n              </Grid>\r\n          </Grid>    \r\n            {props.auction.bids.map((item, index) => {\r\n            \tconsole.log(item)\r\n              return <Grid container spacing={4} key={index}>\r\n                  <Grid item xs={3} sm={3}><Typography variant=\"body2\">${item.bid}</Typography></Grid>\r\n                  <Grid item xs={5} sm={5}><Typography variant=\"body2\">{new Date(item.time).toLocaleString()}</Typography></Grid>\r\n                  <Grid item xs={4} sm={4}><Typography variant=\"body2\">{item.bidder.fullName}</Typography></Grid>\r\n              </Grid>\r\n            })}          \r\n      </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Bidding;","D:\\webapps\\mern\\marketplace\\client\\src\\components\\users\\TabPanel.js",[],{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":22,"column":8,"nodeType":"329","messageId":"330","endLine":22,"endColumn":19},{"ruleId":"327","severity":1,"message":"331","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"327","severity":1,"message":"332","line":2,"column":9,"nodeType":"329","messageId":"330","endLine":2,"endColumn":24},{"ruleId":"327","severity":1,"message":"333","line":3,"column":9,"nodeType":"329","messageId":"330","endLine":3,"endColumn":17},{"ruleId":"327","severity":1,"message":"334","line":36,"column":27,"nodeType":"329","messageId":"330","endLine":36,"endColumn":33},{"ruleId":"327","severity":1,"message":"331","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"327","severity":1,"message":"335","line":2,"column":9,"nodeType":"329","messageId":"330","endLine":2,"endColumn":13},{"ruleId":"327","severity":1,"message":"331","line":1,"column":16,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"327","severity":1,"message":"333","line":3,"column":15,"nodeType":"329","messageId":"330","endLine":3,"endColumn":23},{"ruleId":"327","severity":1,"message":"336","line":3,"column":25,"nodeType":"329","messageId":"330","endLine":3,"endColumn":30},{"ruleId":"327","severity":1,"message":"337","line":39,"column":10,"nodeType":"329","messageId":"330","endLine":39,"endColumn":15},{"ruleId":"327","severity":1,"message":"338","line":86,"column":4,"nodeType":"329","messageId":"330","endLine":86,"endColumn":13},{"ruleId":"327","severity":1,"message":"339","line":49,"column":10,"nodeType":"329","messageId":"330","endLine":49,"endColumn":12},{"ruleId":"327","severity":1,"message":"340","line":12,"column":3,"nodeType":"329","messageId":"330","endLine":12,"endColumn":13},{"ruleId":"327","severity":1,"message":"341","line":4,"column":9,"nodeType":"329","messageId":"330","endLine":4,"endColumn":15},{"ruleId":"342","severity":1,"message":"343","line":55,"column":132,"nodeType":"344","endLine":55,"endColumn":155},{"ruleId":"327","severity":1,"message":"334","line":59,"column":16,"nodeType":"329","messageId":"330","endLine":59,"endColumn":22},{"ruleId":"342","severity":1,"message":"343","line":76,"column":132,"nodeType":"344","endLine":76,"endColumn":155},{"ruleId":"327","severity":1,"message":"345","line":37,"column":10,"nodeType":"329","messageId":"330","endLine":37,"endColumn":16},{"ruleId":"327","severity":1,"message":"334","line":39,"column":16,"nodeType":"329","messageId":"330","endLine":39,"endColumn":22},{"ruleId":"327","severity":1,"message":"346","line":66,"column":18,"nodeType":"329","messageId":"330","endLine":66,"endColumn":24},{"ruleId":"342","severity":1,"message":"343","line":82,"column":132,"nodeType":"344","endLine":82,"endColumn":155},{"ruleId":"327","severity":1,"message":"335","line":2,"column":9,"nodeType":"329","messageId":"330","endLine":2,"endColumn":13},{"ruleId":"327","severity":1,"message":"347","line":25,"column":10,"nodeType":"329","messageId":"330","endLine":25,"endColumn":14},{"ruleId":"327","severity":1,"message":"348","line":25,"column":16,"nodeType":"329","messageId":"330","endLine":25,"endColumn":27},{"ruleId":"327","severity":1,"message":"349","line":25,"column":29,"nodeType":"329","messageId":"330","endLine":25,"endColumn":37},{"ruleId":"327","severity":1,"message":"350","line":25,"column":39,"nodeType":"329","messageId":"330","endLine":25,"endColumn":44},{"ruleId":"327","severity":1,"message":"351","line":25,"column":46,"nodeType":"329","messageId":"330","endLine":25,"endColumn":54},{"ruleId":"327","severity":1,"message":"347","line":45,"column":10,"nodeType":"329","messageId":"330","endLine":45,"endColumn":14},{"ruleId":"327","severity":1,"message":"348","line":45,"column":16,"nodeType":"329","messageId":"330","endLine":45,"endColumn":27},{"ruleId":"327","severity":1,"message":"349","line":45,"column":29,"nodeType":"329","messageId":"330","endLine":45,"endColumn":37},{"ruleId":"327","severity":1,"message":"350","line":45,"column":39,"nodeType":"329","messageId":"330","endLine":45,"endColumn":44},{"ruleId":"327","severity":1,"message":"351","line":45,"column":54,"nodeType":"329","messageId":"330","endLine":45,"endColumn":62},{"ruleId":"327","severity":1,"message":"352","line":2,"column":9,"nodeType":"329","messageId":"330","endLine":2,"endColumn":17},{"ruleId":"327","severity":1,"message":"353","line":2,"column":19,"nodeType":"329","messageId":"330","endLine":2,"endColumn":31},{"ruleId":"327","severity":1,"message":"354","line":2,"column":33,"nodeType":"329","messageId":"330","endLine":2,"endColumn":48},{"ruleId":"327","severity":1,"message":"341","line":2,"column":50,"nodeType":"329","messageId":"330","endLine":2,"endColumn":56},{"ruleId":"355","severity":1,"message":"356","line":7,"column":2,"nodeType":"357","messageId":"358","endLine":9,"endColumn":3},{"ruleId":"327","severity":1,"message":"359","line":5,"column":27,"nodeType":"329","messageId":"330","endLine":5,"endColumn":38},{"ruleId":"327","severity":1,"message":"347","line":27,"column":10,"nodeType":"329","messageId":"330","endLine":27,"endColumn":14},{"ruleId":"327","severity":1,"message":"348","line":27,"column":16,"nodeType":"329","messageId":"330","endLine":27,"endColumn":27},{"ruleId":"327","severity":1,"message":"349","line":27,"column":29,"nodeType":"329","messageId":"330","endLine":27,"endColumn":37},{"ruleId":"327","severity":1,"message":"350","line":27,"column":39,"nodeType":"329","messageId":"330","endLine":27,"endColumn":44},{"ruleId":"327","severity":1,"message":"351","line":27,"column":46,"nodeType":"329","messageId":"330","endLine":27,"endColumn":54},{"ruleId":"327","severity":1,"message":"345","line":46,"column":10,"nodeType":"329","messageId":"330","endLine":46,"endColumn":16},{"ruleId":"327","severity":1,"message":"334","line":50,"column":16,"nodeType":"329","messageId":"330","endLine":50,"endColumn":22},{"ruleId":"342","severity":1,"message":"343","line":93,"column":132,"nodeType":"344","endLine":93,"endColumn":155},{"ruleId":"327","severity":1,"message":"360","line":4,"column":9,"nodeType":"329","messageId":"330","endLine":4,"endColumn":13},{"ruleId":"327","severity":1,"message":"361","line":4,"column":15,"nodeType":"329","messageId":"330","endLine":4,"endColumn":25},{"ruleId":"327","severity":1,"message":"362","line":4,"column":27,"nodeType":"329","messageId":"330","endLine":4,"endColumn":36},{"ruleId":"327","severity":1,"message":"363","line":4,"column":38,"nodeType":"329","messageId":"330","endLine":4,"endColumn":48},{"ruleId":"327","severity":1,"message":"364","line":4,"column":50,"nodeType":"329","messageId":"330","endLine":4,"endColumn":54},{"ruleId":"327","severity":1,"message":"365","line":14,"column":9,"nodeType":"329","messageId":"330","endLine":14,"endColumn":15},{"ruleId":"366","severity":1,"message":"367","line":21,"column":5,"nodeType":"368","endLine":21,"endColumn":29,"suggestions":"369"},{"ruleId":"366","severity":1,"message":"367","line":29,"column":5,"nodeType":"368","endLine":29,"endColumn":29,"suggestions":"370"},{"ruleId":"327","severity":1,"message":"371","line":2,"column":9,"nodeType":"329","messageId":"330","endLine":2,"endColumn":18},{"ruleId":"327","severity":1,"message":"372","line":2,"column":20,"nodeType":"329","messageId":"330","endLine":2,"endColumn":28},{"ruleId":"327","severity":1,"message":"341","line":2,"column":30,"nodeType":"329","messageId":"330","endLine":2,"endColumn":36},{"ruleId":"327","severity":1,"message":"373","line":21,"column":10,"nodeType":"329","messageId":"330","endLine":21,"endColumn":14},{"ruleId":"327","severity":1,"message":"374","line":2,"column":9,"nodeType":"329","messageId":"330","endLine":2,"endColumn":16},{"ruleId":"327","severity":1,"message":"335","line":3,"column":9,"nodeType":"329","messageId":"330","endLine":3,"endColumn":13},{"ruleId":"375","severity":1,"message":"376","line":16,"column":21,"nodeType":"377","messageId":"378","endLine":16,"endColumn":23},{"ruleId":"375","severity":1,"message":"376","line":27,"column":30,"nodeType":"377","messageId":"378","endLine":27,"endColumn":32},{"ruleId":"323","replacedBy":"379"},{"ruleId":"325","replacedBy":"380"},{"ruleId":"327","severity":1,"message":"381","line":7,"column":9,"nodeType":"329","messageId":"330","endLine":7,"endColumn":18},{"ruleId":"327","severity":1,"message":"382","line":7,"column":3,"nodeType":"329","messageId":"330","endLine":7,"endColumn":11},{"ruleId":"327","severity":1,"message":"333","line":13,"column":9,"nodeType":"329","messageId":"330","endLine":13,"endColumn":17},{"ruleId":"327","severity":1,"message":"383","line":14,"column":22,"nodeType":"329","messageId":"330","endLine":14,"endColumn":34},{"ruleId":"327","severity":1,"message":"384","line":24,"column":8,"nodeType":"329","messageId":"330","endLine":24,"endColumn":14},{"ruleId":"327","severity":1,"message":"385","line":25,"column":10,"nodeType":"329","messageId":"330","endLine":25,"endColumn":18},{"ruleId":"327","severity":1,"message":"386","line":27,"column":9,"nodeType":"329","messageId":"330","endLine":27,"endColumn":13},{"ruleId":"327","severity":1,"message":"387","line":27,"column":15,"nodeType":"329","messageId":"330","endLine":27,"endColumn":22},{"ruleId":"388","severity":2,"message":"389","line":76,"column":16,"nodeType":"329","messageId":"390","endLine":76,"endColumn":28},{"ruleId":"327","severity":1,"message":"391","line":4,"column":61,"nodeType":"329","messageId":"330","endLine":4,"endColumn":71},{"ruleId":"327","severity":1,"message":"392","line":4,"column":73,"nodeType":"329","messageId":"330","endLine":4,"endColumn":83},{"ruleId":"327","severity":1,"message":"393","line":9,"column":15,"nodeType":"329","messageId":"330","endLine":9,"endColumn":22},{"ruleId":"366","severity":1,"message":"367","line":20,"column":5,"nodeType":"368","endLine":20,"endColumn":7,"suggestions":"394"},{"ruleId":"375","severity":1,"message":"376","line":63,"column":39,"nodeType":"377","messageId":"378","endLine":63,"endColumn":41},{"ruleId":"366","severity":1,"message":"395","line":16,"column":5,"nodeType":"368","endLine":16,"endColumn":7,"suggestions":"396"},{"ruleId":"327","severity":1,"message":"397","line":8,"column":3,"nodeType":"329","messageId":"330","endLine":8,"endColumn":14},{"ruleId":"327","severity":1,"message":"398","line":10,"column":3,"nodeType":"329","messageId":"330","endLine":10,"endColumn":12},{"ruleId":"327","severity":1,"message":"399","line":11,"column":3,"nodeType":"329","messageId":"330","endLine":11,"endColumn":14},{"ruleId":"375","severity":1,"message":"376","line":26,"column":21,"nodeType":"377","messageId":"378","endLine":26,"endColumn":23},{"ruleId":"375","severity":1,"message":"376","line":37,"column":30,"nodeType":"377","messageId":"378","endLine":37,"endColumn":32},{"ruleId":"327","severity":1,"message":"382","line":7,"column":3,"nodeType":"329","messageId":"330","endLine":7,"endColumn":11},{"ruleId":"327","severity":1,"message":"386","line":28,"column":9,"nodeType":"329","messageId":"330","endLine":28,"endColumn":13},{"ruleId":"327","severity":1,"message":"387","line":28,"column":15,"nodeType":"329","messageId":"330","endLine":28,"endColumn":22},{"ruleId":"327","severity":1,"message":"400","line":34,"column":10,"nodeType":"329","messageId":"330","endLine":34,"endColumn":15},{"ruleId":"327","severity":1,"message":"400","line":53,"column":53,"nodeType":"329","messageId":"330","endLine":53,"endColumn":58},{"ruleId":"342","severity":1,"message":"343","line":91,"column":132,"nodeType":"344","endLine":91,"endColumn":155},{"ruleId":"327","severity":1,"message":"340","line":12,"column":3,"nodeType":"329","messageId":"330","endLine":12,"endColumn":13},{"ruleId":"327","severity":1,"message":"400","line":71,"column":10,"nodeType":"329","messageId":"330","endLine":71,"endColumn":15},{"ruleId":"327","severity":1,"message":"401","line":71,"column":17,"nodeType":"329","messageId":"330","endLine":71,"endColumn":25},{"ruleId":"366","severity":1,"message":"367","line":87,"column":6,"nodeType":"368","endLine":87,"endColumn":30,"suggestions":"402"},{"ruleId":"375","severity":1,"message":"403","line":53,"column":32,"nodeType":"377","messageId":"378","endLine":53,"endColumn":34},{"ruleId":"375","severity":1,"message":"403","line":54,"column":33,"nodeType":"377","messageId":"378","endLine":54,"endColumn":35},{"ruleId":"375","severity":1,"message":"403","line":55,"column":35,"nodeType":"377","messageId":"378","endLine":55,"endColumn":37},{"ruleId":"375","severity":1,"message":"403","line":56,"column":35,"nodeType":"377","messageId":"378","endLine":56,"endColumn":37},{"ruleId":"366","severity":1,"message":"404","line":39,"column":5,"nodeType":"368","endLine":39,"endColumn":7,"suggestions":"405"},"no-native-reassign",["406"],"no-negated-in-lhs",["407"],"no-unused-vars","'ShowProduct' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'isAuthenticated' is defined but never used.","'Redirect' is defined but never used.","'loaded' is assigned a value but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'token' is assigned a value but never used.","'publicKey' is assigned a value but never used.","'id' is assigned a value but never used.","'IconButton' is defined but never used.","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'shopId' is assigned a value but never used.","'userId' is assigned a value but never used.","'name' is assigned a value but never used.","'description' is assigned a value but never used.","'quantity' is assigned a value but never used.","'price' is assigned a value but never used.","'category' is assigned a value but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'GridListTileBar' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'relatedList' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'Icon' is defined but never used.","'signal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params'. Either include it or remove the dependency array.","ArrayExpression",["408"],["409"],"'TextField' is defined but never used.","'MenuItem' is defined but never used.","'item' is assigned a value but never used.","'getCart' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["406"],["407"],"'connected' is assigned a value but never used.","'Elements' is defined but never used.","'createCharge' is defined but never used.","'stripe' is assigned a value but never used.","'elements' is assigned a value but never used.","'card' is assigned a value but never used.","'setCard' is assigned a value but never used.","no-undef","'injectStripe' is not defined.","undef","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'setOpen' is assigned a value but never used.",["410"],"React Hook useEffect has missing dependencies: 'props' and 'token'. Either include them or remove the dependency array.",["411"],"'CardElement' is defined but never used.","'useStripe' is defined but never used.","'useElements' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["412"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'props.auction._id'. Either include it or remove the dependency array.",["413"],"no-global-assign","no-unsafe-negation",{"desc":"414","fix":"415"},{"desc":"414","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},"Update the dependencies array to be: [match.params, match.params.productId]",{"range":"425","text":"426"},{"range":"427","text":"426"},"Update the dependencies array to be: [match.params]",{"range":"428","text":"429"},"Update the dependencies array to be: [props, token]",{"range":"430","text":"431"},"Update the dependencies array to be: [match.params, match.params.auctionId]",{"range":"432","text":"433"},"Update the dependencies array to be: [props.auction._id]",{"range":"434","text":"435"},[754,778],"[match.params, match.params.productId]",[948,972],[663,665],"[match.params]",[504,506],"[props, token]",[2097,2121],"[match.params, match.params.auctionId]",[1039,1041],"[props.auction._id]"]